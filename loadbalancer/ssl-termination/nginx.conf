#daemon off;

worker_processes 1;

events { worker_connections 1024; }

http{

#sendfile on;

    server {
        ### server port and name ###
        listen          8000;
        ssl             on;
        server_name     nginx.ssl;

        ### SSL log files ###
        access_log      logs/ssl-access.log;
        error_log       logs/ssl-error.log;

        ### SSL cert files ###
        ssl_certificate      ssl/ssl.crt;
        ssl_certificate_key  ssl/ssl.key;

        ### Add SSL specific settings here ###


        ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers RC4:HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  10m;

    proxy_set_header   Host                 $http_host;
    proxy_set_header   X-Real-IP            $remote_addr;
    proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto    $scheme;
    proxy_redirect     off;

    # keepalive + raven.js is a disaster
    keepalive_timeout 0;

    # use very aggressive timeouts
    proxy_read_timeout 5s;
    proxy_send_timeout 5s;
    send_timeout 5s;
    resolver_timeout 5s;
    client_body_timeout 5s;

    # buffer larger messages
    client_max_body_size 150k;
    client_body_buffer_size 150k;

        ### We want full access to SSL via backend ###
        location / {
                proxy_pass  http://web:8000;
        }

    location ~* /api/(?P<projectid>\d+/)?store/ {
      proxy_pass        http://sentry:9000;

      #limit_req   zone=one  burst=3  nodelay;
      #limit_req   zone=two  burst=10  nodelay;
    }
    }
}
